{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","classNames","completed","title","TodoList","todos","map","getUserById","userId","usersFromServer","find","todosWithUsers","App","useState","setTodos","setUserId","userErrorMessage","setUserErrorMessage","setTitle","titleErrorMessage","setTitleErrorMessage","action","method","onSubmit","event","preventDefault","trim","Math","max","htmlFor","type","placeholder","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ec502e92.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../types';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user?.email}`}>\n    {user?.name}\n  </a>\n);\n","import classNames from 'classnames';\nimport { UserInfo } from '../UserInfo';\nimport { Todos } from '../types';\n\ntype Props = {\n  todo: Todos;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  return (\n    <article\n      data-id={todo.id}\n      className={classNames('TodoInfo', {\n        'TodoInfo--completed': todo.completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {todo.title}\n      </h2>\n\n      {todo.user && (\n        <UserInfo user={todo.user} />\n      )}\n    </article>\n  );\n};\n","import React from 'react';\nimport { TodoInfo } from '../TodoInfo';\nimport { Todos } from '../types';\n\ntype Props = {\n  todos: Todos[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo todo={todo} key={todo.id} />\n      ))}\n    </section>\n  );\n};\n","import './App.scss';\nimport { useState } from 'react';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\nimport { Todos } from './components/types';\n\nfunction getUserById(userId: number) {\n  return usersFromServer.find(user => user?.id === userId) || null;\n}\n\nconst todosWithUsers: Todos[] = todosFromServer.map(todo => {\n  return {\n    ...todo,\n    user: getUserById(todo.userId),\n  };\n});\n\nexport const App = () => {\n  const [todos, setTodos] = useState(todosWithUsers);\n\n  const [userId, setUserId] = useState(0);\n  const [userErrorMessage, setUserErrorMessage] = useState('');\n  const [title, setTitle] = useState('');\n  const [titleErrorMessage, setTitleErrorMessage] = useState('');\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (!title.trim()) {\n      setTitleErrorMessage('Please enter a title');\n    }\n\n    if (!userId) {\n      setUserErrorMessage('Please choose a user');\n    }\n\n    if (!title.trim() || !userId) {\n      return;\n    }\n\n    setTodos([\n      ...todos,\n      {\n        id: Math.max(...todos.map(todo => todo.id)) + 1,\n        title,\n        userId,\n        completed: false,\n        user: getUserById(userId),\n      },\n    ]);\n\n    setTitle('');\n    setTitleErrorMessage('');\n    setUserId(0);\n    setUserErrorMessage('');\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"title\">Title: </label>\n\n          <input\n            id=\"title\"\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={(event => {\n              setTitle(event.target.value);\n              setTitleErrorMessage('');\n            })}\n          />\n          {titleErrorMessage && (\n            <span className=\"error\">{titleErrorMessage}</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"userId\">User: </label>\n\n          <select\n            id=\"userId\"\n            data-cy=\"userSelect\"\n            value={userId}\n            onChange={event => {\n              setUserId(+event.target.value);\n              setUserErrorMessage('');\n            }}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {usersFromServer.map(user => (\n              <option\n                key={user.id}\n                value={user.id}\n              >\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          {userErrorMessage && (\n            <span className=\"error\">{userErrorMessage}</span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}